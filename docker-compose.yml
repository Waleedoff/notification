version: "3.9"

x-common-envs: &common-envs
  DB_HOST: "db"
  DB_USER: "postgres"
  DB_PASSWORD: "dsadsa"
  DB_PORT: 5432
  APP_NAME: "notification"
  DB_NAME: "notify_db"
  REDIS_HOST: redis
  REDIS_PORT: 6379
  REDIS_DB: 0
  REDIS_LOCAL_CASHING_TTL: 0
  CELERY_BROKER_URL: "redis://redis:6379/0"
  


  

x-common-build-volumes:
  &common-build-volumes
  build:
    context: .
    dockerfile: "./Dockerfile"
  volumes:
    - .:/app
  environment:
    <<: *common-envs

services:
  db:
    ports:
      - "5440:5432"
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: dsadsa
      POSTGRES_DB: keycloak

  pgadmin:
    restart: unless-stopped
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - ./.pgadmin:/root/.pgadmin
    links:
      - db
    ports:
      - "5052:80"
    depends_on:
      - db
  
  redis:
    image: redis
    ports:
      - "6380:6379"

  redis-commander:
    image: rediscommander/redis-commander

    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"


  api:
    restart: unless-stopped
    depends_on:
      - db
      - pgadmin
      - keycloak
      - celery
      - redis-commander
      - flower
    ports:
      - "3002:80"
    command: /start-reload.sh
    <<: *common-build-volumes

  celery:
    restart: unless-stopped
    depends_on:
      - redis
      - db
    command: watchmedo auto-restart -p="*.py" -R celery -- -A app.celery_worker.tasks worker --loglevel=info
    <<: *common-build-volumes

  # celery-beat:
  #   restart: unless-stopped
  #   depends_on:
  #     - redis
  #     - db
  #   command: "celery -A app.celery_worker.beat beat --loglevel=info"
  #   <<: *common-build-volumes
  
  flower:
    image: mher/flower
    container_name: flower
    ports:
      - "5555:5555"
    command: celery flower --port=5555
    depends_on:
      - redis
      - db
      - celery
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      FLOWER_UNAUTHENTICATED_API: "true"
    <<: *common-build-volumes

  notification-pytest:
    depends_on:
      - db
      - redis
    command: pytest
    <<: *common-build-volumes
    environment:
      <<: *common-envs
      ENVIRONMENT: "testing"
      DB_NAME: "notification_testing"
      CELERY_BROKER_URL: redis://redis:6379/2


  keycloak:
    image: docker.io/bitnami/keycloak:23.0.7
    environment:
      KEYCLOAK_DATABASE_HOST: db
      KEYCLOAK_DATABASE_NAME: keycloak
      KEYCLOAK_DATABASE_USER: postgres
      KEYCLOAK_DATABASE_PASSWORD: dsadsa
      KEYCLOAK_ADMIN_PASSWORD: Pa55w0rd
      KEYCLOAK_ADMIN: admin
    ports:
      - 8080:8080
    depends_on:
      - db
      - pgadmin
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  minio:
  postgres:

